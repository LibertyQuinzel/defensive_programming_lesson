[MASTER]
# Use multiple processes to speed up Pylint
jobs=0

# Python code to execute, usually for sys.path manipulation
init-hook='import sys; sys.path.append(".")'

# Files or directories to be skipped
ignore=CVS,.git,__pycache__,.pytest_cache,htmlcov,build,dist

# Add files or directories matching the regex patterns to the ignore list
ignore-patterns=^\.#

# Python version used to set the default set of checks
py-version=3.8

# Discover python modules and packages in the file system subtree
recursive=yes

[MESSAGES CONTROL]
# Disable specific warnings/errors
disable=
    # Defensive programming often requires "redundant" checks
    too-many-arguments,
    too-many-locals,
    too-many-statements,
    too-many-branches,
    too-few-public-methods,
    
    # Allow defensive programming patterns
    broad-except,
    bare-except,
    unused-argument,
    
    # Documentation-related (can be enabled for stricter checking)
    missing-module-docstring,
    missing-class-docstring,
    missing-function-docstring,
    
    # Allow educational code patterns
    invalid-name,
    redefined-outer-name,
    
    # Allow test-specific patterns
    protected-access,
    no-self-use,
    
    # Import-related (often needed in educational examples)
    import-error,
    wrong-import-order,
    ungrouped-imports

# Enable specific warnings that are important for defensive programming
enable=
    useless-suppression,
    deprecated-pragma,
    use-symbolic-message-instead

[REPORTS]
# Set the output format
output-format=colorized

# Include message's id in output
include-ids=yes

# Template used to display messages
msg-template={path}:{line}:{column}: {msg_id}: {msg} ({symbol})

# Set the cache size for astng objects
cache-size=500

# List of plugins to load
load-plugins=
    # pylint.extensions.check_elif,
    # pylint.extensions.bad_builtin,
    # pylint.extensions.docparams,
    # pylint.extensions.docstyle,
    # pylint.extensions.empty_comment,
    # pylint.extensions.overlapping_exceptions,
    # pylint.extensions.redefined_variable_type

[REFACTORING]
# Maximum number of nested blocks for function / method body
max-nested-blocks=5

# Complete name of functions that never returns
never-returning-functions=sys.exit,argparse.parse_error

[BASIC]
# Good variable names which should always be accepted
good-names=i,j,k,ex,Run,_,id,db,ui,pk,fd

# Bad variable names which should always be refused
bad-names=foo,bar,baz,toto,tutu,tata

# Colon-delimited sets of names that determine each other's naming style when
# the name regexes allow several styles
name-group=

# Include a hint for the correct naming format with invalid-name
include-naming-hint=yes

# List of decorators that produce properties
property-classes=abc.abstractproperty

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression which should only match function or class names that do not require a docstring
no-docstring-rgx=^_

# Minimum line length for functions/classes that require docstrings
docstring-min-length=-1

[SIMILARITIES]
# Minimum lines number of a similarity
min-similarity-lines=4

# Ignore comments when computing similarities
ignore-comments=yes

# Ignore docstrings when computing similarities
ignore-docstrings=yes

# Ignore imports when computing similarities
ignore-imports=no

[TYPECHECK]
# List of decorators that produce context managers
contextmanager-decorators=contextlib.contextmanager

# List of members which are set dynamically and missed by pylint inference
generated-members=

# Tells whether missing members accessed in mixin class should be ignored
ignore-mixin-members=yes

# Tells whether to warn about missing members when the owner of the attribute is inferred to be None
ignore-none=yes

# This flag controls whether pylint should warn about no-member and similar checks when the object is None
ignore-on-opaque-inference=yes

# List of class names for which member attributes should not be checked
ignored-classes=optparse.Values,thread._local,_thread._local

# List of module names for which member attributes should not be checked
ignored-modules=

# Show a hint with a list of possible names when a member is not found
missing-member-hint=yes

# The minimum edit distance a name should have to be considered a hint
missing-member-hint-distance=1

# The total number of hints to list
missing-member-max-choices=1

[VARIABLES]
# Tells whether we should check for unused import in __init__ files
init-import=no

# A regular expression matching the name of dummy variables
dummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_

# List of additional names supposed to be defined in builtins
additional-builtins=

# List of strings which can identify a callback function by name
callbacks=cb_,_cb

# List of qualified module names which can have objects that can redefine builtins
redefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io

[FORMAT]
# Maximum number of characters on a single line
max-line-length=100

# Regexp for a line that is allowed to be longer than the limit
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Allow the body of an if to be on the same line as the test if there is no else
single-line-if-stmt=no

# Allow the body of a class to be on the same line as the declaration if body contains single statement
single-line-class-stmt=no

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit
indent-string='    '

# Number of spaces of indent required inside a hanging or continued line
indent-after-paren=4

# Expected format of line ending
expected-line-ending-format=

[LOGGING]
# The type of string formatting that logging methods do
logging-format-style=old

# Logging modules to check that the string format arguments are in logging function parameter format
logging-modules=logging

[MISCELLANEOUS]
# List of note tags to take in consideration
notes=FIXME,XXX,TODO,NOTE

# Regular expression of note tags to take in consideration
notes-rgx=

[SPELLING]
# Spelling dictionary name
spelling-dict=

# List of comma separated words that should not be checked
spelling-ignore-words=

# A path to a file that contains the private dictionary
spelling-private-dict-file=

# Tells whether to store unknown words to the private dictionary
spelling-store-unknown-words=no

[DESIGN]
# Maximum number of arguments for function / method
max-args=7

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branches=12

# Maximum number of statements in function / method body
max-statements=50

# Maximum number of parents for a class
max-parents=7

# List of qualified class names to ignore when counting class parents
ignored-parents=

# Maximum number of attributes for a class
max-attributes=7

# Minimum number of public methods for a class
min-public-methods=2

# Maximum number of public methods for a class
max-public-methods=20

# Maximum number of boolean expressions in an if statement
max-bool-expr=5

[CLASSES]
# List of method names used to declare (i.e. assign) instance attributes
defining-attr-methods=__init__,__new__,setUp,__post_init__

# List of member names, which should be excluded from the protected access warning
exclude-protected=_asdict,_fields,_replace,_source,_make

# List of valid names for the first argument in a class method
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method
valid-metaclass-classmethod-first-arg=cls

# Warn about protected attribute access inside special methods
check-protected-access-in-special-methods=no

[IMPORTS]
# Deprecated modules which should not be used
deprecated-modules=optparse,tkinter.tix

# Create a graph of every (i.e. internal and external) dependencies in the given file
import-graph=

# Create a graph of external dependencies in the given file
ext-import-graph=

# Create a graph of internal dependencies in the given file
int-import-graph=

# Force import order to recognize a module as part of the standard compatibility libraries
known-standard-library=

# Force import order to recognize a module as part of a third party library
known-third-party=

# Couples of modules and preferred modules
preferred-modules=

[EXCEPTIONS]
# Exceptions that will emit a warning when being caught
overgeneral-exceptions=BaseException,Exception