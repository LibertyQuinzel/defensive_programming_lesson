[metadata]
name = defensive-programming-lesson
version = 1.0.0
description = Comprehensive Python defensive programming course with hands-on exercises
long_description = file: README.md
long_description_content_type = text/markdown
author = Defensive Programming Course
maintainer = Course Maintainers
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Education
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Education
    Topic :: Software Development :: Quality Assurance
    Topic :: Software Development :: Testing

[options]
python_requires = >=3.8
include_package_data = True
packages = find:

[options.packages.find]
exclude =
    tests*
    htmlcov*
    build*
    dist*

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True
show_error_codes = True
show_column_numbers = True
show_error_context = True
pretty = True

# Per-module options for educational code
[mypy-module_*]
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = False

[mypy-test_*]
disallow_untyped_defs = False
disallow_incomplete_defs = False

[flake8]
max-line-length = 100
extend-ignore = 
    # Allow lambda assignments (common in defensive programming examples)
    E731,
    # Allow line break before binary operator (black formatting)
    W503,
    # Allow line break after binary operator
    W504,
    # Allow long lines in comments with URLs
    E501
per-file-ignores =
    # Test files can have long lines and other relaxed rules
    test_*.py:E501,F401,F811
    # Assignment files are educational, allow some flexibility
    assignment_*.py:E501,F401
    # Starter examples are for learning, not production
    starter_example.py:E501,F401,F841
max-complexity = 10
select = E,W,F,C
exclude = 
    .git,
    __pycache__,
    .pytest_cache,
    htmlcov,
    build,
    dist,
    venv,
    env

[black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | build
  | dist
  | htmlcov
)/
'''

[isort]
profile = black
multi_line_output = 3
line_length = 100
known_first_party = 
    module_1_eafp_vs_lbyl,
    module_2_invariants_assertions,
    module_3_exceptions_hierarchy,
    module_4_design_by_contract,
    module_5_sentinel_values_logging
known_third_party = pytest,mock